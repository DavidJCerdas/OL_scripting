++ Exwatcher - Script - physical utilization

> ./Mem_utilization.sh&&vi ./Mem_utilization.sh
---------------------------------------------------------------------------------------------------
#!/bin/bash

treshold=$1

if [ -n "$treshold" ]
then 
	for file in `ls -1 *.dat`
	do
	 ## date and time
	 egrep zzz $file
	 ## ((total-free)/total)*100  : Swap used+cached  - (free/total)*100  : free   
	 awk '/Mem/ {print "Memory Utilization: "(($2-$6)/$2)*100" - Free Memory: "($6/$2)*100 } ' $file|tr -d k|awk -vtreshold=$treshold '{if($3>=treshold) print $0}'
	done
else 
    echo "variable is unset"
	echo "Please use this statement as example"
	echo "./Mem_utilization.sh <treshold in number>"
fi
---------------------------------------------------------------------------------------------------
chmod u+x ./Mem_utilization.sh&&./Mem_utilization.sh

[>]


----------------------------------------------------------------------------------------------
+ On average

> ./Mem_utilization.sh&&vi ./Mem_utilization.sh
---------------------------------------------------------------------------------------------------
#!/bin/bash

for file in `ls -1 *.dat`
do
	 # date and time
	 echo "----$file----"
	 egrep zzz $file
     # Calculate the average in numbers per day
	 avg_total=`egrep "Mem:" $file|tr -d k |awk ' {sum+=$2} END { printf "%0.2f\n", sum/NR}'`
	 avg_free=`egrep "Mem:" $file|tr -d k |awk ' {sum+=$6} END { printf "%0.2f\n", sum/NR}'`
     avg_utilization=`echo "$avg_total $avg_free"|awk '{ printf "%0.2f\n",  ($1-$2)}'`
     # Print the average in numbers and in %
	 echo "avg_total:$avg_total avg_free:$avg_free avg_utilization:$avg_utilization"
	 echo "$avg_total $avg_free $avg_utilization"|awk '{print "On Average Mem Utilization: "($3/$1)*100"% - Mem Free:"($2/$1)*100"%"}'
	 echo ""
	 
done
---------------------------------------------------------------------------------------------------
chmod u+x ./Mem_utilization.sh&&./Mem_utilization.sh
